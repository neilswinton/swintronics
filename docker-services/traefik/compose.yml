

services:
  traefik:
    image: traefik:3.5
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=America/New_York
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_API_EMAIL=${CF_API_EMAIL}
    network_mode: "service:tailscale"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik.yml:/traefik.yml:ro
      - ./data/configs:/configs:ro
      - traefik-certs:/certs:rw
      - ./data/logs:/logs:rw
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.${SERVER_DOMAIN}`)"
        - "traefik.http.services.traefik.loadbalancer.server.port=1337"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.tls.certresolver=${CERT_RESOLVER}"
        - "traefik.http.routers.traefik.tls.domains[0].main=${SERVER_DOMAIN}"
        - "traefik.http.routers.traefik.tls.domains[0].sans=*.${SERVER_DOMAIN}"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "tailscale=true"
    healthcheck:
      test: traefik healthcheck || exit 1
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 20s
    depends_on:
      tailscale:
        condition: service_started # service_healthy with tailscale healthcheck

  whoami:
    container_name: simple-service
    image: traefik/whoami
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.swintronics.com`)"
        - "traefik.http.routers.whoami.entrypoints=websecure"
        - "traefik.http.routers.whoami.tls.certresolver=${CERT_RESOLVER}"
    profiles: ["debug"]

volumes:
  traefik-certs: null